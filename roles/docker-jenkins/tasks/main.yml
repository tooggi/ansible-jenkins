---
# tasks file for docker-jenkins

- name: Install docker
  yum:
    name: docker
    state: present
  become: yes

- name: Start Docker service
  service:
    name: docker
    state: started
    enabled: yes
  become: yes

- name: Set ec2-user to Docker group
  user:
    name: "{{ ruser }}"
    append: yes
    groups: docker
  become: yes

- name: Install docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/1.29.0/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    checksum: sha256:65bf4d3dcc5ea5dcd4644434271879a2b47e98bcfa6ca958523079c17e5adb5c
    mode: 'a+x'
  become: yes

- name: Install python3 and modules
  yum:
    name: ['python3', 'python3-pip']
    state: present
    update_cache: yes
  become: yes

- name: Install Docker SDK for Python
  vars:
    ansible_python_interpreter: /usr/bin/python3
  pip:
    name: docker
    extra_args: --user

- name: Create a lab directory
  file:
    path: lab
    state: directory

- name: Copy jenkins_ansible dir with a Dockerfile
  copy:
    src: jenkins_ansible
    dest: lab

- name: Build a docker image with Jenkins and Ansible
  vars:
    ansible_python_interpreter: /usr/bin/python3
  community.docker.docker_image:
    name: "{{ jenkins_image_name }}"
    build:
      path: lab/jenkins_ansible
    source: build

- name: Create a network for containers
  vars:
    ansible_python_interpreter: /usr/bin/python3
  community.docker.docker_network:
    name: "{{ lab_network }}"

- name: Run Jenkins Docker container
  vars:
    ansible_python_interpreter: /usr/bin/python3
  community.docker.docker_container:
    name: "{{ jenkins_container_name }}"
    image: "{{ jenkins_image_name }}"
    container_default_behavior: compatibility
    ports:
      - "8080:8080"
    volumes:
      - jenkins-data:/var/jenkins_home
    network_mode: default
    networks:
      - name: "{{ lab_network }}"
    purge_networks: yes